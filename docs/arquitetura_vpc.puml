@startuml VPC

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v18.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/AWSSimplified.puml
!include AWSPuml/Compute/EC2.puml
!include AWSPuml/Compute/EC2Instance.puml
!include AWSPuml/Groups/AWSCloud.puml
!include AWSPuml/Groups/VPC.puml
!include AWSPuml/Groups/AvailabilityZone.puml
!include AWSPuml/Groups/PublicSubnet.puml
!include AWSPuml/Groups/PrivateSubnet.puml
!include AWSPuml/NetworkingContentDelivery/VPCNATGateway.puml
!include AWSPuml/NetworkingContentDelivery/VPCInternetGateway.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include DEVICONS/mysql.puml

hide stereotype
skinparam linetype ortho

AWSCloudGroup(cloud) {
  VPCGroup(vpc, "Virtual Private Cloud") {
    VPCInternetGateway(internet_gateway, "Gateway de Internet", "")

    AvailabilityZoneGroup(az_1, "\tZona de Disponibilidade 1\t") {
      PublicSubnetGroup(az_1_public, "Subnet pública") {
        VPCNATGateway(az_1_nat_gateway, "NAT gateway", "") #Transparent
        EC2Instance(az_1_ec2_1, "SnapCloud Inst1", "") #Transparent
        System_Boundary(c4, "Serviço de Banco de Dados"){
            ContainerDb(db, "Banco de Dados", "SQLite", $sprite="mysql")
        }
      }
      PrivateSubnetGroup(az_1_private, "Subnet privada") {
      }

      az_1_ec2_1 .u.> internet_gateway
      az_1_ec2_1 .u.> db
    }
  }
}
@enduml